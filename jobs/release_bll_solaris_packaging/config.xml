<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Build bll-solaris-baseonly target&lt;br&gt;&#xd;
Run Unit test&lt;br&gt;&#xd;
Create directory structure needed for the Tarball&lt;br&gt;&#xd;
Create tar.gz file&lt;br&gt;&#xd;
Call the FTP tarball job which copies the Tarball over to Martin&lt;br&gt;&#xd;
Jenkins Node(s): 10.2.10.91 &lt;br&gt;&#xd;
Wait 20 minutes to stagger builds (1200) seconds.&lt;br&gt;&#xd;
</description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.4.1">
      <useBuildBlocker>false</useBuildBlocker>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>BRANCH_NAME</name>
          <description>branch name</description>
          <defaultValue>4.40_rel</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>P4CLEANWORKSPACE</name>
          <description>clean build</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>BUILD_RUN_UNITTEST</name>
          <description>run unittest</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BUILD_OUTPUT_DIR</name>
          <description>build output dir</description>
          <defaultValue>build/il/bld_bll-solaris8_sparc/Release/bin</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>STC_MAJ_MIN_VERSION</name>
          <description>major minor version TODO: get this from a file</description>
          <defaultValue>4.40</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BLL_BUILD_NUMBER</name>
          <description></description>
          <defaultValue>BAD_BUILD_NUMBER</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SOURCE_OS</name>
          <description></description>
          <defaultValue>Solaris8</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEPENDENT_JOB_NAME</name>
          <description></description>
          <defaultValue>release_bll_solaris_packaging</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RELEASE_BUILD</name>
          <description>Flag whether or not this build is a release build candidate. If a build is a release candidate then STC_CR license/entitlement will be disabled</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>RELEASE_TYPE</name>
          <description></description>
          <defaultValue>RELEASE</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.perforce.PerforceSCM" plugin="perforce@1.3.26">
    <configVersion>1</configVersion>
    <p4User>scmbuild</p4User>
    <p4Passwd></p4Passwd>
    <p4Port>perforce.spirentcom.com:1666</p4Port>
    <p4Client>${JOB_NAME}</p4Client>
    <projectPath>//SCM/Scripts/ci_* //ws/Build_Scripts/Scripts/ci_*&#xd;
+//TestCenter/${BRANCH_NAME}/... //ws/...&#xd;
-//TestCenter/*/Layer1/...&#xd;
-//TestCenter/*/userdocauto/...&#xd;
-//TestCenter/*/sandbox/...&#xd;
-//TestCenter/*/.../il/...&#xd;
-//TestCenter/*/.../hw/...&#xd;
-//TestCenter/*/.../WebHelp/...&#xd;
-//TestCenter/*/content/cts/...&#xd;
-//TestCenter/*/common/lib/java/...&#xd;
-//TestCenter/*/common/tools/scons/...&#xd;
-//TestCenter/*/framework/ui/resultsanalysis/tools/jvm/...&#xd;
-//TestCenter/*/common/lib/boost_1_34_0/...&#xd;
-//TestCenter/*/Bakeoff_TestCaseScripts/...&#xd;
-//TestCenter/*/other/...&#xd;
-//TestCenter/*/documents/...&#xd;
-//TestCenter/*/schedules/...&#xd;
-//TestCenter/*/scm/...&#xd;
-//TestCenter/*/regression/...&#xd;
+//TestCenter/${BRANCH_NAME}/build/il/... //ws/build/il/...&#xd;
-//TestCenter/${BRANCH_NAME}/build/il/cli/... //ws/build/il/cli/...&#xd;
-//TestCenter/${BRANCH_NAME}/build/il/testframework/... //ws/build/il/testframework/...&#xd;
-//TestCenter/*/.../ui/...&#xd;
+//TestCenter/${BRANCH_NAME}/common/.../ui/... //ws/common/.../ui/...&#xd;
+//TestCenter/${BRANCH_NAME}/framework/ui/automation/... //ws/framework/ui/automation/...</projectPath>
    <projectOptions>noallwrite clobber nocompress unlocked nomodtime rmdir</projectOptions>
    <clientOwner></clientOwner>
    <p4SysDrive>C:</p4SysDrive>
    <p4SysRoot>C:\WINDOWS</p4SysRoot>
    <browser class="hudson.plugins.perforce.browsers.P4Web">
      <url>http://jenkins.ad.spirentcom.com:5104/</url>
      <p4WebEndShite>?ac=22</p4WebEndShite>
      <p4DifEndShite>?ac=19</p4DifEndShite>
      <p4ClEndShite>?ac=10</p4ClEndShite>
    </browser>
    <p4Tool>p4</p4Tool>
    <useClientSpec>false</useClientSpec>
    <useStreamDepot>false</useStreamDepot>
    <forceSync>false</forceSync>
    <alwaysForceSync>false</alwaysForceSync>
    <dontUpdateServer>false</dontUpdateServer>
    <disableAutoSync>false</disableAutoSync>
    <disableChangeLogOnly>false</disableChangeLogOnly>
    <disableSyncOnly>false</disableSyncOnly>
    <showIntegChanges>false</showIntegChanges>
    <useOldClientName>false</useOldClientName>
    <createWorkspace>true</createWorkspace>
    <updateView>true</updateView>
    <dontRenameClient>false</dontRenameClient>
    <updateCounterValue>false</updateCounterValue>
    <dontUpdateClient>false</dontUpdateClient>
    <exposeP4Passwd>false</exposeP4Passwd>
    <wipeBeforeBuild>false</wipeBeforeBuild>
    <quickCleanBeforeBuild>false</quickCleanBeforeBuild>
    <restoreChangedDeletedFiles>false</restoreChangedDeletedFiles>
    <wipeRepoBeforeBuild>false</wipeRepoBeforeBuild>
    <firstChange>-1</firstChange>
    <fileLimit>0</fileLimit>
    <excludedFilesCaseSensitivity>true</excludedFilesCaseSensitivity>
    <slaveClientNameFormat>${basename}-${hash}</slaveClientNameFormat>
    <lineEndValue>local</lineEndValue>
    <useViewMask>false</useViewMask>
    <useViewMaskForPolling>false</useViewMaskForPolling>
    <useViewMaskForSyncing>false</useViewMaskForSyncing>
    <useViewMaskForChangeLog>false</useViewMaskForChangeLog>
    <pollOnlyOnMaster>true</pollOnlyOnMaster>
  </scm>
  <quietPeriod>1200</quietPeriod>
  <assignedNode>bll_solaris_spccalsolpv02</assignedNode>
  <canRoam>false</canRoam>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers class="vector"/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
env
set LD_LIBRARY_PATH=/usr/lib:/usr/local/lib
echo &quot;Set LD_LIBRARY_PATH&quot;
echo &quot;LD_LIBRARY_PATH is $LD_LIBRARY_PATH&quot;
which scons
# rm -rf $WORKSPACE/$BUILD_OUTPUT_DIR/API

if [ &quot;$RELEASE_BUILD&quot; = &quot;true&quot; ]; then
    cp -f $WORKSPACE/framework/bll/core/include/licensing/ga_release/ControlledReleaseCheck.h $WORKSPACE/framework/bll/core/include/licensing/ControlledReleaseCheck.h
fi</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
scons -j 12 -k --debug=time target=bll-solaris8</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>env
cd $BUILD_OUTPUT_DIR
/usr/local/bin/python26 $WORKSPACE/Build_Scripts/Scripts/ci_run_jenkins_steps.py --createpropfile=yes --runsetver=yes --updatepkgindextcl=yes --updatespirenttestcentertcl=yes --updatestclibtcl=yes --updategemspecversion=yes --updateilversionxml=yes</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>if [ &quot;$BUILD_RUN_UNITTEST&quot; = &quot;true&quot; ]; then
    echo $WORKSPACE/$BUILD_OUTPUT_DIR
    cd $WORKSPACE/$BUILD_OUTPUT_DIR
    set LD_LIBRARY_PATH=$WORKSPACE/$BUILD_OUTPUT_DIR:.:
    # python $WORKSPACE/framework/tools/testRunner/testRunner.py
fi</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>if [ -d Spirent_TestCenter_$STC_MAJ_MIN_VERSION ]; then
	echo &quot;Spirent_TestCenter_$STC_MAJ_MIN_VERSION exists!&quot;
else
	mkdir Spirent_TestCenter_$STC_MAJ_MIN_VERSION
fi
cd Spirent_TestCenter_$STC_MAJ_MIN_VERSION

if [ -d Solaris ]; then
	echo &quot;Solaris exists!&quot;
else
	mkdir Solaris
fi
cd Solaris/

cp -rf $WORKSPACE/$BUILD_OUTPUT_DIR/API $WORKSPACE/Spirent_TestCenter_$STC_MAJ_MIN_VERSION/Solaris
cp -rf $WORKSPACE/$BUILD_OUTPUT_DIR/HelpInfo $WORKSPACE/Spirent_TestCenter_$STC_MAJ_MIN_VERSION/Solaris
cp -rf $WORKSPACE/$BUILD_OUTPUT_DIR/Templates $WORKSPACE/Spirent_TestCenter_$STC_MAJ_MIN_VERSION/Solaris
cp -rf $WORKSPACE/$BUILD_OUTPUT_DIR/Model $WORKSPACE/Spirent_TestCenter_$STC_MAJ_MIN_VERSION/Solaris
cp -rf $WORKSPACE/$BUILD_OUTPUT_DIR/stclib $WORKSPACE/Spirent_TestCenter_$STC_MAJ_MIN_VERSION/Solaris
cp -rf $WORKSPACE/$BUILD_OUTPUT_DIR/Dpg $WORKSPACE/Spirent_TestCenter_$STC_MAJ_MIN_VERSION/Solaris
cp -rf $WORKSPACE/$BUILD_OUTPUT_DIR/PDMLMap $WORKSPACE/Spirent_TestCenter_$STC_MAJ_MIN_VERSION/Solaris
cp -rf $WORKSPACE/$BUILD_OUTPUT_DIR/PDUs $WORKSPACE/Spirent_TestCenter_$STC_MAJ_MIN_VERSION/Solaris
cp -rf $WORKSPACE/$BUILD_OUTPUT_DIR/RcmFiles $WORKSPACE/Spirent_TestCenter_$STC_MAJ_MIN_VERSION/Solaris
cp -f $WORKSPACE/framework/bll/core/install/release/ILVersion.xml $WORKSPACE/Spirent_TestCenter_$STC_MAJ_MIN_VERSION/Solaris
cp -f $WORKSPACE/$BUILD_OUTPUT_DIR/stcbll.ini $WORKSPACE/Spirent_TestCenter_$STC_MAJ_MIN_VERSION/Solaris
cp -f /usr/local/lib/libgcc_s.so.1 $WORKSPACE/Spirent_TestCenter_$STC_MAJ_MIN_VERSION/Solaris
cp -f /usr/local/lib/libstdc++.so.6 $WORKSPACE/Spirent_TestCenter_$STC_MAJ_MIN_VERSION/Solaris
cp -f /usr/local/lib/libgcc_s.so $WORKSPACE/Spirent_TestCenter_$STC_MAJ_MIN_VERSION/Solaris
cp -f /usr/local/lib/libstdc++.so $WORKSPACE/Spirent_TestCenter_$STC_MAJ_MIN_VERSION/Solaris

for file in .gemspec .rb .tcl .pl .pm .py .a .so .xml .so* ;do
 if ( ls $WORKSPACE/$BUILD_OUTPUT_DIR/*$file &gt;/dev/null) then
    echo &quot;$file file exists!&quot;
    cp -f $WORKSPACE/$BUILD_OUTPUT_DIR/*$file $WORKSPACE/Spirent_TestCenter_$STC_MAJ_MIN_VERSION/Solaris/
  else
    echo &quot;There are no files matching the pattern: $file to copy!&quot;
  fi
done

for file in test*.xml correct*.xml source*.xml test*.tcl correct*.tcl unused*.tcl lib*.a stcFtpd.tcl tclCmdline.tcl tclFtpd.tcl ;do
 if ( ls $WORKSPACE/Spirent_TestCenter_$STC_MAJ_MIN_VERSION/Solaris/$file &gt;/dev/null) then
    echo &quot;$file file exists!&quot;
    rm -f $WORKSPACE/Spirent_TestCenter_$STC_MAJ_MIN_VERSION/Solaris/$file
  else
    echo &quot;There are no files matching the pattern: $file to delete!&quot;
  fi
done

chmod a+rx $WORKSPACE/Spirent_TestCenter_$STC_MAJ_MIN_VERSION
chmod -R o+rw $WORKSPACE/Spirent_TestCenter_$STC_MAJ_MIN_VERSION
chmod -R a+rw $WORKSPACE/Spirent_TestCenter_$STC_MAJ_MIN_VERSION</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>rm -f Spirent_TestCenter_Solaris8_$STC_MAJ_MIN_VERSION.tar
if [ -f Spirent_TestCenter_Solaris8_$STC_MAJ_MIN_VERSION.tar.gz ]; then
    echo removing Spirent_TestCenter_Solaris8_$STC_MAJ_MIN_VERSION.tar.gz
    rm -f Spirent_TestCenter_Solaris8_$STC_MAJ_MIN_VERSION.tar.gz
else
    echo Spirent_TestCenter_Solaris8_$STC_MAJ_MIN_VERSION.tar.gz does not exist.
fi
tar cvf Spirent_TestCenter_Solaris8_$STC_MAJ_MIN_VERSION.tar Spirent_TestCenter_$STC_MAJ_MIN_VERSION
gzip Spirent_TestCenter_Solaris8_$STC_MAJ_MIN_VERSION.tar
echo &quot;Finished creating tar files&quot;</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.chucknorris.CordellWalkerRecorder plugin="chucknorris@0.5">
      <factGenerator/>
    </hudson.plugins.chucknorris.CordellWalkerRecorder>
    <hudson.plugins.logparser.LogParserPublisher plugin="log-parser@1.0.8">
      <unstableOnWarning>false</unstableOnWarning>
      <failBuildOnError>true</failBuildOnError>
      <parsingRulesPath>/var/lib/jenkins/log_parse_rule</parsingRulesPath>
    </hudson.plugins.logparser.LogParserPublisher>
    <hudson.plugins.claim.ClaimPublisher plugin="claim@2.3"/>
    <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.21">
      <configs>
        <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.FileBuildParameters>
              <propertiesFile>properties.txt</propertiesFile>
              <failTriggerOnMissing>false</failTriggerOnMissing>
            </hudson.plugins.parameterizedtrigger.FileBuildParameters>
          </configs>
          <projects>release_ftp_tarball_packaging, </projects>
          <condition>SUCCESS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
        </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
        <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.FileBuildParameters>
              <propertiesFile>properties.txt</propertiesFile>
              <failTriggerOnMissing>false</failTriggerOnMissing>
            </hudson.plugins.parameterizedtrigger.FileBuildParameters>
          </configs>
          <projects>release_copy_to_spccalfs03_packaging</projects>
          <condition>SUCCESS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
        </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.BuildTrigger>
  </publishers>
  <buildWrappers>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper plugin="build-timeout@1.12.2">
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>480</timeoutMinutes>
      </strategy>
      <failBuild>true</failBuild>
      <writingDescription>true</writingDescription>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.5.7"/>
  </buildWrappers>
</project>