<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>50</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.4.1">
      <useBuildBlocker>false</useBuildBlocker>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>BRANCH_NAME</name>
          <description>branch name</description>
          <defaultValue>mainline</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>P4CLEANWORKSPACE</name>
          <description>clean build</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>STC_MAJ_MIN_VERSION</name>
          <description>major minor version TODO: get this from a file</description>
          <defaultValue>1.10.3</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.22">
      <autoRebuild>false</autoRebuild>
    </com.sonyericsson.rebuild.RebuildSettings>
  </properties>
  <scm class="hudson.plugins.perforce.PerforceSCM" plugin="perforce@1.3.27">
    <configVersion>1</configVersion>
    <p4User>tableuser</p4User>
    <p4Passwd></p4Passwd>
    <p4Port>perforceproxy.cal.ci.spirentcom.com:1999</p4Port>
    <p4Client>${JOB_NAME}_${BRANCH_NAME}</p4Client>
    <projectPath>//Wireshark_Spirent/${BRANCH_NAME}/src/... //ws/...</projectPath>
    <projectOptions>noallwrite clobber nocompress unlocked nomodtime rmdir</projectOptions>
    <p4SysDrive>C:</p4SysDrive>
    <p4SysRoot>C:\WINDOWS</p4SysRoot>
    <browser class="hudson.plugins.perforce.browsers.P4Web">
      <url>http://jenkins.ad.spirentcom.com:5104/</url>
      <p4WebEndShite>?ac=22</p4WebEndShite>
      <p4DifEndShite>?ac=19</p4DifEndShite>
      <p4ClEndShite>?ac=10</p4ClEndShite>
    </browser>
    <p4Tool>p4</p4Tool>
    <useClientSpec>false</useClientSpec>
    <useStreamDepot>false</useStreamDepot>
    <forceSync>false</forceSync>
    <alwaysForceSync>false</alwaysForceSync>
    <dontUpdateServer>false</dontUpdateServer>
    <disableAutoSync>false</disableAutoSync>
    <disableChangeLogOnly>false</disableChangeLogOnly>
    <disableSyncOnly>false</disableSyncOnly>
    <showIntegChanges>false</showIntegChanges>
    <useOldClientName>false</useOldClientName>
    <createWorkspace>true</createWorkspace>
    <updateView>true</updateView>
    <dontRenameClient>false</dontRenameClient>
    <updateCounterValue>false</updateCounterValue>
    <dontUpdateClient>false</dontUpdateClient>
    <exposeP4Passwd>false</exposeP4Passwd>
    <wipeBeforeBuild>true</wipeBeforeBuild>
    <quickCleanBeforeBuild>false</quickCleanBeforeBuild>
    <restoreChangedDeletedFiles>false</restoreChangedDeletedFiles>
    <wipeRepoBeforeBuild>false</wipeRepoBeforeBuild>
    <firstChange>0</firstChange>
    <fileLimit>0</fileLimit>
    <excludedFilesCaseSensitivity>true</excludedFilesCaseSensitivity>
    <slaveClientNameFormat>${basename}-${hash}</slaveClientNameFormat>
    <lineEndValue>local</lineEndValue>
    <useViewMask>true</useViewMask>
    <useViewMaskForPolling>true</useViewMaskForPolling>
    <useViewMaskForSyncing>false</useViewMaskForSyncing>
    <useViewMaskForChangeLog>false</useViewMaskForChangeLog>
    <pollOnlyOnMaster>true</pollOnlyOnMaster>
  </scm>
  <assignedNode>wshark-Win7-64</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.plugins.python.Python plugin="python@1.2">
      <command>import os, stat
from glob import glob

print &quot;++++++++++++++++++ Remove read only property of config.nmake +++++++++++++++++++++++&quot;
myFile = &apos;c:\jenkins\workspace\wireshark_windows64_package\config.nmake&apos;
fileAtt = os.stat(myFile)[0]
if (not fileAtt &amp; stat.S_IWRITE):
   # File is read-only, so make it writeable
   os.chmod(myFile, stat.S_IWRITE)

print &quot;++++++++++++++ Delete current installers ++++++++++++++&quot;
for f in glob (&apos;c:/jenkins/workspace/wireshark_windows64_package/packaging/nsis/Wireshark-win*.exe&apos;):
   os.unlink (f)
for f in glob (&apos;c:/jenkins/workspace/wireshark_installer/Wireshark-win*.exe&apos;):
   os.unlink (f)

print &quot;++++++++++++++ Set environment to 64-bit ++++++++++++++&quot;

fread  = open (&apos;c:/jenkins/workspace/wireshark_windows64_package/config.nmake&apos;, &apos;r&apos;)
fwrite = open (&apos;c:/jenkins/workspace/wireshark_windows64_package/config_new.nmake&apos;, &apos;w&apos;)

for line in fread:
     if &quot;WIRESHARK_TARGET_PLATFORM=&quot; in line:
          junk1, junk2 = line.split(&apos;=&apos;, 2)
          junk2 = &apos;win64&apos;
          newline = junk1 + &apos;=&apos; + junk2 + &apos;\n&apos;
          fwrite.write(newline)
     elif &apos;CYGWIN_PATH=&apos; in line:
          junk1, junk2 = line.split(&apos;=&apos;, 2)
          junk2 = &apos;c:\\cygwin64\\bin&apos;
          newline =  junk1 + &apos;=&apos; + junk2 + &apos;\n&apos;
          fwrite.write(newline)
     elif &apos;MAKENSIS=&apos; in line:
          newline = &apos;MAKENSIS=&quot;c:\\Program Files\\NSIS\\makensis.exe&quot; \n&apos;
          fwrite.write(newline)
     else:
          fwrite.write(line)

fread.close()
fwrite.close()

os.remove(&apos;C:/jenkins/workspace/wireshark_windows64_package/config.nmake&apos;)
os.rename(&apos;C:/jenkins/workspace/wireshark_windows64_package/config_new.nmake&apos;, &apos;C:/jenkins/workspace/wireshark_windows64_package/config.nmake&apos;)</command>
    </hudson.plugins.python.Python>
    <hudson.tasks.Shell>
      <command>echo +++++++++++++++ Build wireshark 64-bit installer +++++++++++++++++++++

call &quot;C:\Program Files (x86)\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.Cmd&quot; /Release /x64
set WIRESHARK_TARGET_PLATFORM=win64
cd C:\jenkins\workspace\wireshark_windows64_package
nmake -f Makefile.nmake verify_tools
nmake -f Makefile.nmake setup
nmake -f Makefile.nmake distclean
nmake -f Makefile.nmake all</command>
    </hudson.tasks.Shell>
    <hudson.plugins.python.Python plugin="python@1.2">
      <command>import os
import glob
import shutil
import subprocess

print &quot;+++++++++++++++ Copy openflow.bll +++++++++++++++++++++&quot;

os.chdir(&quot;c:\jenkins\workspace&quot;)
for file in glob.glob(&quot;version_*.txt&quot;):
    line = file
    junk1, junk2 = line.split(&apos;.&apos;, 2)
    junk3, ver = junk1.split(&apos;_&apos;, 2)
    break

dst = &apos;c:\jenkins\workspace\wireshark_windows64_package\wireshark-gtk2\plugins\\1.10.3-Spirent-&apos; + ver
srcfile = &apos;c:\jenkins\workspace\openflowdll\openflow13_1_10_x64.dll&apos;     
shutil.copy(srcfile, dst)
os.rename( dst+&apos;\openflow13_1_10_x64.dll&apos;, dst+&apos;\openflow.dll&apos;  )

print &quot;+++++++++++++++ Make wireshark 64-bit package +++++++++++++++++++++&quot;

subprocess.call([&quot;nmake&quot;, &quot;-f&quot;, &quot;Makefile.nmake&quot;, &quot;packaging&quot;])

print &quot;+++++++++++++++ Copy installer to wireshark_installer folder +++++++++++++++&quot;
shutil.copy(&quot;c:\jenkins\workspace\wireshark_windows64_package\packaging\nsis\Wireshark-win*.exe&quot;, &quot;c:\jenkins\workspace\wireshark_installer&quot;)</command>
    </hudson.plugins.python.Python>
    <hudson.plugins.python.Python plugin="python@1.2">
      <command>import os
from glob import glob

print &quot;++++++++++++++ Delete current installers ++++++++++++++&quot;
for f in glob (&apos;c:/jenkins/workspace/wireshark_windows64_package/packaging/nsis/Wireshark-win*.exe&apos;):
   os.unlink (f)

print &quot;++++++++++++++ Set environment to 32-bit ++++++++++++++&quot;

fread  = open (&apos;c:/jenkins/workspace/wireshark_windows64_package/config.nmake&apos;, &apos;r&apos;)
fwrite = open (&apos;c:/jenkins/workspace/wireshark_windows64_package/config_new.nmake&apos;, &apos;w&apos;)

for line in fread:
     if &quot;WIRESHARK_TARGET_PLATFORM=&quot; in line:
          junk1, junk2 = line.split(&apos;=&apos;, 2)
          junk2 = &apos;win32&apos;
          newline = junk1 + &apos;=&apos; + junk2 + &apos;\n&apos;
          fwrite.write(newline)
     else:
          fwrite.write(line)

fread.close()
fwrite.close()

os.remove(&apos;C:/jenkins/workspace/wireshark_windows64_package/config.nmake&apos;)
os.rename(&apos;C:/jenkins/workspace/wireshark_windows64_package/config_new.nmake&apos;, &apos;C:/jenkins/workspace/wireshark_windows64_package/config.nmake&apos;)</command>
    </hudson.plugins.python.Python>
    <hudson.tasks.BatchFile>
      <command>echo ++++++++++++++ Build wireshark 32-bit ++++++++++++++

call &quot;C:\Program Files (x86)\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.Cmd&quot; /Release /x86
set WIRESHARK_TARGET_PLATFORM=win32
cd C:\jenkins\workspace\wireshark_windows64_package
nmake -f Makefile.nmake verify_tools
nmake -f Makefile.nmake setup
nmake -f Makefile.nmake distclean
nmake -f Makefile.nmake all

echo ++++++++++++++ Copy openflow.bll ++++++++++++++

xcopy /s c:\jenkins\workspace\openflowdll\openflow13_1_10.dll c:\jenkins\workspace\wireshark_windows64_package\wireshark-gtk2\plugins\1.10.3-Spirent-5
ren c:\jenkins\workspace\wireshark_windows64_package\wireshark-gtk2\plugins\1.10.3-Spirent-5\openflow13_1_10.dll openflow.dll

echo ++++++++++++++ Make wireshark 32-bit package ++++++++++++++
nmake -f Makefile.nmake packaging

echo +++++++++++++++ Copy installer to wireshark_installer folder +++++++++++++++
xcopy /s c:\jenkins\workspace\wireshark_windows64_package\packaging\nsis\Wireshark-win*.exe c:\jenkins\workspace\wireshark_installer\

exit /B 0</command>
    </hudson.tasks.BatchFile>
    <hudson.tasks.BatchFile>
      <command>echo ++++++++++++++ Copy installer files to \\storage\builds\wireshark\temp ++++++++++++++++++++

cd C:\jenkins\workspace\wireshark_installer
xcopy /s Wireshark-win*-1.10.3-spirent-*.exe \\storage\builds\wireshark\temp</command>
    </hudson.tasks.BatchFile>
  </builders>
  <publishers>
    <hudson.plugins.logparser.LogParserPublisher plugin="log-parser@1.0.8">
      <unstableOnWarning>false</unstableOnWarning>
      <failBuildOnError>true</failBuildOnError>
      <parsingRulesPath>/opt/jenkins/jenkins-root/log_parse_rule</parsingRulesPath>
    </hudson.plugins.logparser.LogParserPublisher>
    <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.37.2">
      <recipientList>lili.huang@spirent.com,somboon.ongkamongkol@spirent.com</recipientList>
      <configuredTriggers>
        <hudson.plugins.emailext.plugins.trigger.FailureTrigger>
          <email>
            <recipientList></recipientList>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <sendToDevelopers>true</sendToDevelopers>
            <sendToRequester>false</sendToRequester>
            <includeCulprits>false</includeCulprits>
            <sendToRecipientList>true</sendToRecipientList>
            <attachmentsPattern></attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <replyTo></replyTo>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.FailureTrigger>
      </configuredTriggers>
      <contentType>default</contentType>
      <defaultSubject>$DEFAULT_SUBJECT</defaultSubject>
      <defaultContent>$DEFAULT_CONTENT</defaultContent>
      <attachmentsPattern></attachmentsPattern>
      <presendScript></presendScript>
      <attachBuildLog>false</attachBuildLog>
      <compressBuildLog>false</compressBuildLog>
      <replyTo></replyTo>
      <saveOutput>false</saveOutput>
    </hudson.plugins.emailext.ExtendedEmailPublisher>
  </publishers>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.5.8"/>
  </buildWrappers>
</project>